/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 models\Clownfish.glb --output output\Clownfish.js --transform --keepnames --shadows 
Files: models\Clownfish.glb [146.42KB] > F:\My Documents\Articles Media\AMCOT\Models\Quaternius\Fishing\JSX\output\Clownfish-transformed.glb [33.52KB] (77%)
*/

import React from 'react'
import { useGraph, useFrame } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const link = `models/Clownfish.glb`

export function ModelQuaterniusFishingClownfish(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(link)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  // Add gentle bobbing animation
  useFrame(({ clock }) => {
    if (group.current) {
      group.current.position.y = Math.sin(clock.getElapsedTime()) * 0.5 // Adjust amplitude as needed
      group.current.position.z = Math.sin(clock.getElapsedTime()) * 0.5 // Adjust amplitude as needed
    }
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Fish_Armature">
          <primitive object={nodes.Main1} />
        </group>
        <group name="Clownfish">
          <skinnedMesh name="Cube029" geometry={nodes.Cube029.geometry} material={materials.Clownfish_Dark} skeleton={nodes.Cube029.skeleton} />
          <skinnedMesh name="Cube029_1" geometry={nodes.Cube029_1.geometry} material={materials.Clownfish_Main} skeleton={nodes.Cube029_1.skeleton} />
          <skinnedMesh name="Cube029_2" geometry={nodes.Cube029_2.geometry} material={materials.Clownfish_Light} skeleton={nodes.Cube029_2.skeleton} />
          <skinnedMesh name="Cube029_3" geometry={nodes.Cube029_3.geometry} material={materials.Eyes} skeleton={nodes.Cube029_3.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(link)
